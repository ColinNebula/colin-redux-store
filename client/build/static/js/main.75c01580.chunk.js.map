{"version":3,"sources":["assets/spinner.gif","components/Jumbotron/index.js","utils/mutations.js","utils/helpers.js","pages/Success.js","components/CartItem/index.js","utils/actions.js","utils/auth.js","utils/queries.js","components/Cart/index.js","components/ProductItem/index.js","utils/reducers.js","utils/store.js","components/ProductList/index.js","components/CategoryMenu/index.js","pages/Home.js","pages/Detail.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Jumbotron","children","style","height","clear","paddingTop","textAlign","LOGIN","gql","ADD_ORDER","ADD_USER","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","Success","useMutation","addOrder","useEffect","a","cart","products","map","item","length","variables","data","forEach","setTimeout","location","assign","saveOrder","CartItem","dispatch","useDispatch","className","src","image","alt","name","price","type","placeholder","value","purchaseQuantity","onChange","target","parseInt","role","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","removeItem","QUERY_PRODUCTS","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","stripePromise","loadStripe","Cart","state","useSelector","useLazyQuery","getCheckout","toggleCart","then","res","redirectToCheckout","sessionId","checkout","session","getCart","cartOpen","key","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","ProductItem","quantity","to","count","pluralize","itemInCart","find","cartItem","product","initialState","categories","currentCategory","reducers","action","newState","filter","createStore","ProductList","useQuery","loading","category","spinner","CategoryMenu","categoryData","id","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","NoMatch","Login","props","email","password","formState","setFormState","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.75c01580.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('colin-redux-store', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map(item => item._id);\n      \n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n    \n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n        \n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the home page\n        </h2>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Success;\n","import React from 'react';\n// import redux\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  // const [, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;","// imports\nimport React, { useEffect } from \"react\";\n// import redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLazyQuery } from '@apollo/client';\nimport { idbPromise } from \"../../utils/helpers\"\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    getCheckout({\n      variables: { products: productIds }\n    });\n  \n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          role=\"img\"\n          aria-label=\"trash\">🛒</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n          </span>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\nexport default Cart;\n","// imports\nimport React from \"react\";\n// import redux\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  // const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","// imports \nimport {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from './actions';\n\nconst initialState = \n    {\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  }\n\n  \nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n\n// export function useProductReducer(initialState) {\n//   return useReducer(reducer, initialState)\n// }","import {createStore} from 'redux';\n\nimport reducers from './reducers';\n\nexport default createStore(reducers) ","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n  const dispatch = useDispatch()\n  const state = useSelector((state) => state);\n  // const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","// imports\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n// import redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\nimport Cart from '../components/Cart';\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n// import redux\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport Cart from \"../components/Cart\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\n\nfunction Detail() {\n\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Colin-Redux-Store\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","// Imports \nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport Success from \"./pages/Success\";\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport OrderHistory from './pages/OrderHistory';\n// import redux\nimport {Provider} from 'react-redux';\nimport store from './utils/store'\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n        {/* <StoreProvider> */}\n        <Provider store={store}>\n\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/success\" component={Success} />\n            <Route exact path=\"/orderHistory\" component={OrderHistory} />\n            <Route exact path=\"/products/:id\" component={Detail} />\n            <Route component={NoMatch} />\n          </Switch>\n          </Provider>\n          {/* </StoreProvider> */}\n\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}